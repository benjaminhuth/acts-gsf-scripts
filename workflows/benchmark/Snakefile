configfile: "config/config.yaml"

envvars:
    "ODD_DIR",
    "ACTS_INSTALL_DIR",
    "ACTS_SRC_DIR",
    "ACTS_SEQUENCER_DISABLE_FPEMON",

rule simulated_particles:
    output:
        "tmp/event000000000-particles_initial.csv",
        "tmp/event000000000-hits.csv",
    script:
        "scripts/make_data.py"
        
rule make_benchmarks:
    input:
        "cpp_benchmark/common.hpp",
        "cpp_benchmark/gsf.cpp",
        "cpp_benchmark/kf.cpp",
        "cpp_benchmark/CMakeLists.txt"
    output:
        "tmp/build/gsf_benchmark",
        "tmp/build/kf_benchmark",
    shell:
        """
        mkdir -p tmp/build
        cd tmp/build
        cmake ../../cpp_benchmark \
            -D ACTS_SRC_DIR=$ACTS_SRC_DIR \
            -D CMAKE_PREFIX_PATH=$ACTS_INSTALL_DIR \
            -D ACTS_INSTALL_DIR=$ACTS_INSTALL_DIR
        make
        """

rule perf_gsf_benchmark:
    input:
        "tmp/event000000000-particles_initial.csv",
        "tmp/event000000000-hits.csv",
        "tmp/build/gsf_benchmark",
    output:
        "tmp/{cmps}/perf.data",
        "tmp/{cmps}/timing.tsv",
    shell:
        """
        perf record --call-graph=dwarf,65528 -F1000 --output=tmp/{wildcards.cmps}/perf.data \
            tmp/build/gsf_benchmark \
                --components {wildcards.cmps} \
                --input tmp \
                --odd $ODD_DIR/xml/OpenDataDetector.xml \
                --matmap $ODD_DIR/data/odd-material-maps.root \
                --digicfg config/odd-digi-smearing-config.json
        mv timing.tsv tmp/{wildcards.cmps}/timing.tsv
        """
        
rule kf_benchmark:
    input:
        "tmp/event000000000-particles_initial.csv",
        "tmp/event000000000-hits.csv",
        "tmp/build/kf_benchmark",
    output:
        "tmp/kf_timing.tsv",
    shell:
        """
        tmp/build/gsf_benchmark \
            --input tmp \
            --odd $ODD_DIR/xml/OpenDataDetector.xml \
            --matmap $ODD_DIR/data/odd-material-maps.root \
            --digicfg config/odd-digi-smearing-config.json
        mv timing.tsv tmp/kf_timing.tsv
        """

rule get_flamegraph:
    output:
        "thirdparty/FlameGraph/stackcollapse-perf.pl",
        "thirdparty/FlameGraph/flamegraph.pl",
    shell:
        """
        git clone https://github.com/brendangregg/FlameGraph thirdparty/FlameGraph
        """

rule perf_process:
    input:
        "tmp/{cmps}/perf.data",
        "thirdparty/FlameGraph/stackcollapse-perf.pl",
        "thirdparty/FlameGraph/flamegraph.pl",
    output:
        "tmp/{cmps}/out.folded.filt.short.namespace"
    shell:
        """
        export TMPDIR=tmp/{wildcards.cmps}
        perf script --input $TMPDIR/perf.data -a -F comm,pid,tid,time,event,ip,sym,dso > $TMPDIR/out.perf
        thirdparty/FlameGraph/stackcollapse-perf.pl $TMPDIR/out.perf > $TMPDIR/out.folded
        c++filt < $TMPDIR/out.folded > $TMPDIR/out.folded.filt
        cat $TMPDIR/out.folded.filt | python3 scripts/shorten_templates.py > $TMPDIR/out.folded.filt.short
        cat $TMPDIR/out.folded.filt.short | python3 scripts/remove_namespaces.py > $TMPDIR/out.folded.filt.short.namespace
        """

rule plot_flamegraph:
    input:
        "tmp/{cmps}/out.folded.filt.short.namespace"
    output:
        "plots/flamegraph_{cmps}.svg",
        "plots/flamegraph_{cmps}.png",
    shell:
        """
        thirdparty/FlameGraph/flamegraph.pl --minwidth=25 --width=1800 \
            tmp/{wildcards.cmps}/out.folded.filt.short.namespace > plots/flamegraph_{wildcards.cmps}.svg
        convert plots/flamegraph_{wildcards.cmps}.svg plots/flamegraph_{wildcards.cmps}.png
        """


rule plot_piecharts:
    input:
        "tmp/{cmps}/out.folded.filt.short.namespace"
    output:
        "plots/piechart_{cmps}.pdf"
    script:
        "scripts/plot_pie_charts.py"

rule plot_samples_vs_components:
    input:
        expand("tmp/{c}/out.folded.filt.short.namespace", c=[1,2,4,8,12,16,20,24,28,32]),
    output:
        "plots/components_vs_samples.pdf"
    script:
        "scripts/component_time_plot.py"

rule plot_gsf_vs_kf:
    input:
        "tmp/event000000000-particles_initial.csv",
        "tmp/kf_timing.tsv",
        expand("tmp/{c}/timing.tsv", c=[1,2,4,8,12,16,20,24,28,32]),
    output:
        "plots/gsf_vs_kf.pdf",
    script:
        "scripts/plot_timing_gsf_vs_kf.py"

rule all:
    default_target: True
    input:
        "plots/flamegraph_12.png",
        "plots/piechart_12.pdf",
        "plots/components_vs_samples.pdf",
        "plots/gsf_vs_kf.pdf",
